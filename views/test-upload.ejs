<!DOCTYPE html>
<html lang="en">
<head>
    <% include partials/page/head.ejs %>
</head>
<link href="../../file-input/css/fileinput.min.css" media="all"
      rel="stylesheet" type="text/css"/>

<% include partials/page/jsdefaults.ejs %>
<body class="home" style="background-color:#c59353; background-position: center center;
             background-repeat: no-repeat; background-attachment: fixed; background-size: cover;">
<!-- Navigation (main menu)
================================================== -->
<% include partials/page/navbar.ejs %>

<!-- Cover element
================================================== -->
<div ng-app="uploadModule" ng-controller="uploadCtrl">
    <div class="cover-wrapper">
        <div class="cover-container overlay" style="background-color: rgba(197,147,83,0.3); height: 100vh">
            <div class=" cover-inner">
                <div class="container">
                    <h2 style="color:#fff;">Add New Prize</h2>

                    <form id="loginform" method="post">
                        <p>
                            <label for="user_login">Item Name<br>
                                <input type="text" name="Item Name" id="user_login"
                                       class="input" value="" size="20"></label>
                        </p>

                        <p>
                            <label for="user_pass">Item Description<br>
                                <textarea type="text" name="Item Description" id="user_pass"
                                          class="input" value="" size="20" style="resize: vertical"></textarea></label>
                        </p>

                        <p>
                            <label for="user_pass">Item Cost<br>
                                <input class="form-control" id="cost"
                                       onkeypress="return isNumberKey(event)" type="text"
                                       maxlength="4" onclick="clickEntry(this);"></label>
                        </p>

                        <p>
                            <label for="user_pass">Item Quantity<br>
                                <input class="form-control" id="quantity"
                                       onkeypress="return isNumberKey(event)" type="text"
                                       maxlength="4" onclick="clickEntry(this);"></label>
                        </p>

                        <p class="submit">
                            <input style="background-color: #00254C" type="submit" name="submit" id="submit"
                                   class="button button-primary button-large"
                                   value="Add Item">
                        </p>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
</body>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script src="../../file-input/js/fileinput.min.js"></script>

<script>
    var myApp = angular.module('uploadModule', []);
    myApp.controller('uploadCtrl', ['$scope', 'multipartForm', function ($scope, multipartForm) {
        $scope.status = "Upload File";
        $scope.finished = false;
        $scope.loading = false;
        $scope.Submit = function () {
            $scope.finished = false;
            $scope.loading = true;
            var uploadUrl = '/test-upload';
            $scope.status = "Processing";
            console.log($scope.itemData)
            multipartForm.post(uploadUrl, $scope.itemData, $scope);
        }
    }]);

    myApp.service('multipartForm', ['$http', function ($http) {
        this.post = function (uploadUrl, data, scope) {

            var fd = new FormData();
            for (var key in data) {
                fd.append(key, data[key]);
            }
            $http.post(uploadUrl, fd, {
                transformRequest: angular.identity,
                headers: {'Content-Type': undefined}
            }).success(function (response) {

                scope.status = response.message;
                scope.loading = false;
                scope.finished = true;
            });
        }
    }]);

    myApp.directive('fileModel', ['$parse', function ($parse) {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var model = $parse(attrs.fileModel);
                var modelSetter = model.assign;

                element.bind('change', function () {
                    scope.$apply(function () {
                        modelSetter(scope, element[0].files[0]);
                    });
                });
            }
        };
    }]);

    function clickEntry(input) {
        var disMouse = document.getElementById(input.id);
        disMouse.addEventListener("mousewheel", function (evt) {
            evt.preventDefault();
        });
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>
</html>